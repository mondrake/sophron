<?php

/**
 * @file
 * Ua-parser - Integrates ua-parser, a User Agent String parser library.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function uaparser_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'uaparser.settings':
      $output = '';
      $output .= '<p>' . t('<strong>ua-parser</strong> is an open-source and community-driven, regexp-based user-agent parser. For more information, visit <a href=":uaparser_url">uaparser.org</a>.', [':uaparser_url' => 'http://www.uaparser.org/']) . '</p>';
      $output .= '<p>' . t('The Drupal ua-parser module integrates Drupal with the <a href=":uap-php_url">ua-parser/uap-php</a> library; the module configuration allows to update manually the user-agent definitions file from the latest version in the <a href=":uap-core_url">ua-parser/uap-core</a> repository, or to schedule automatic updates.', [':uap-php_url' => 'https://github.com/ua-parser/uap-php', ':uap-core_url' => 'https://github.com/ua-parser/uap-core']) . '</p>';
      return $output;

  }
}

/**
 * Implements hook_cache_flush().
 */
function uaparser_cache_flush() {
  return array('uaparser');
}

/**
 * Implements hook_cron().
 */
function uaparser_cron() {
  $config = \Drupal::config('uaparser.settings');
  if ($config->get('enable_automatic_updates') == TRUE) {
    // Check the current update timer.
    $automatic_update_timer = $config->get('automatic_updates_timer');

    // Check when the last update occurred.
    $last_imported = \Drupal::state()->get('uaparser.last_update');

    // Update the regexes.yaml file if the amount of time specified by the
    // update timer has passed.
    if (!$last_imported || (($last_imported + $automatic_update_timer) < REQUEST_TIME)) {
      \Drupal::service('uaparser')->update();
    }
  }
}
